/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ClienteServidor;

import static ClienteServidor.Frame.control;
import Control.Control;
import Juego.Ficha;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Nacho
 */
public class TableroPanel extends javax.swing.JPanel {

    public static EspacioFicha e;
    Hub hub;
    Ficha ficha;
    public static Map map = new HashMap();
    public static Dimension tam;

    public static ArrayList<EspacioFicha> listaEspacios = new ArrayList<EspacioFicha>();

    Thread t = new Thread() {
        public void run() {
            int i = 0;
//            while (true) {
//             
//                if (e != null && ficha != null && e.collision(ficha)) {
//                    System.out.println("Choc√≥ we");
//                    System.out.println(i);
//                    i++;
//                    ficha.setLocation(e.getLocation());
//                    ficha.rotar(90);
//                }else{
////                    System.out.println("kpex");
//                }
//            }

        }
    };

    Thread t2 = new Thread() {
        public void run() {
            while (true) {
//                metodoPerron();
            }
        }
    };

    /**
     * Creates new form Tablero
     */
    public TableroPanel() {
        initComponents();
        tam = Toolkit.getDefaultToolkit().getScreenSize();

        pintarFichas();
        if (Control.listaIps.size() == 2) {
            hub = new Hub(1);
        } else {
            hub = new Hub(2);
        }
        hub.setLocation((int) (tam.getWidth() / 2) - (hub.getWidth() / 2), (int) (tam.getHeight() / 2) + 230);
        map.put("Hub", hub);
        PanelTablero.add(hub);
        PanelTablero.repaint();
        crearEspacio(new EspacioFicha(5, 5));
        this.repaint();
        t.start();

//        t2.start();
    }

    public void pintarFichas() {
//        PanelTablero2.setVisible(false);
        for (int i = 0; i < 14; i++) {
//            Control.getJugador().getListaFichas().get(i).setLugar((PanelTablero2.getWidth() / 2) - (Control.getJugador().getListaFichas().get(i).getWidth() / 2), (PanelTablero2.getHeight() / 2) - ( Control.getJugador().getListaFichas().get(i).getWidth() / 2));

            if (i != 0) {
                Control.getJugador().getListaFichas().get(i).setLugar((int) Control.getJugador().getListaFichas().get(i - 1).getLocation().getX() + 45, ((int) tam.getHeight() / 2) + 265);
            } else {
                Control.getJugador().getListaFichas().get(i).setLugar(((int) tam.getWidth() / 2) - 340, ((int) tam.getHeight() / 2) + 265);
            }
            Control.getJugador().getListaFichas().get(i).rotar(90);
            //agrega el objeto en el MAP
            map.put("Ficha", Control.getJugador().getListaFichas().get(i));
            //agrega el KEY en el List
//        listModel.addElement( "Objeto " + this.contador_de_objetos );
            //agrega el objeto en el JPanel
            PanelTablero.add(Control.getJugador().getListaFichas().get(i));

            if (!Control.getJugador().isTurno()) {
                Control.getJugador().getListaFichas().get(i).setEnabled(false);
            }
            //actualiza graficos
            PanelTablero.repaint();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelTablero = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 0, 102));

        PanelTablero.setBackground(new java.awt.Color(108, 122, 137));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/usuario1_2.png"))); // NOI18N

        javax.swing.GroupLayout PanelTableroLayout = new javax.swing.GroupLayout(PanelTablero);
        PanelTablero.setLayout(PanelTableroLayout);
        PanelTableroLayout.setHorizontalGroup(
            PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableroLayout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(397, Short.MAX_VALUE))
        );
        PanelTableroLayout.setVerticalGroup(
            PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTableroLayout.createSequentialGroup()
                .addContainerGap(427, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public static void crearEspacio(EspacioFicha ef) {
        System.out.println("Ef: " + ef.getLadoDispA() + "  B:" + ef.getLadoDispB());
        System.out.println(ef.getLadoDisponible());
        if (listaEspacios.size() == 0) {
            listaEspacios.add(ef);
            listaEspacios.get(0).setLugar((int) (tam.getWidth() / 2) - (listaEspacios.get(0).getWidth() / 2), (int) (tam.getHeight() / 2) - (listaEspacios.get(0).getWidth() / 2));
            map.put("Ficha", listaEspacios.get(0));
            PanelTablero.add(listaEspacios.get(0));
            PanelTablero.repaint();

            listaEspacios.get(0).rotar(90);
            listaEspacios.get(0).repaint();
//            this.repaint();

        } else {

            if (ef.isMula()) {
                if (!ef.isOcupadoA()) {
                    EspacioFicha e = new EspacioFicha(ef.getLadoDispA(), "A");
                    listaEspacios.add(e);
                    listaEspacios.get(listaEspacios.indexOf(e)).setLugar((listaEspacios.get(listaEspacios.indexOf(ef)).getX() - 59), listaEspacios.get(listaEspacios.indexOf(ef)).getY());
                    map.put("Ficha", listaEspacios.get(listaEspacios.indexOf(e)));
                    PanelTablero.add(listaEspacios.get(listaEspacios.indexOf(e)));
                    PanelTablero.repaint();
                    listaEspacios.get(listaEspacios.indexOf(e)).repaint();
                }
                if (!ef.isOcupadoB()) {
                    EspacioFicha e = new EspacioFicha(ef.getLadoDispA(), "B");
                    listaEspacios.add(e);
                    listaEspacios.get(listaEspacios.indexOf(e)).setLugar((listaEspacios.get(listaEspacios.indexOf(ef)).getX() + 59), listaEspacios.get(listaEspacios.indexOf(ef)).getY());
                    map.put("Ficha", listaEspacios.get(listaEspacios.indexOf(e)));
                    PanelTablero.add(listaEspacios.get(listaEspacios.indexOf(e)));
                    PanelTablero.repaint();
                    listaEspacios.get(listaEspacios.indexOf(e)).repaint();
                }
            } else {

                if (ef.getX() < (TableroPanel.tam.getWidth() / 2)) {
                    if (!ef.isOcupadoA()) {
                        System.out.println("libre A");
                        EspacioFicha e = new EspacioFicha(ef.getLadoDispB(), "A");
                        listaEspacios.add(e);
                        listaEspacios.get(listaEspacios.indexOf(e)).setLugar((listaEspacios.get(listaEspacios.indexOf(ef)).getX() - 90), listaEspacios.get(listaEspacios.indexOf(ef)).getY());
                        map.put("Ficha", listaEspacios.get(listaEspacios.indexOf(e)));
                        PanelTablero.add(listaEspacios.get(listaEspacios.indexOf(e)));
                        PanelTablero.repaint();
                        listaEspacios.get(listaEspacios.indexOf(e)).repaint();
                    }

                } else {
                    if (!ef.isOcupadoB()) {
                        EspacioFicha e = new EspacioFicha(ef.getLadoDispA(), "B");
                        listaEspacios.add(e);
                        listaEspacios.get(listaEspacios.indexOf(e)).setLugar((listaEspacios.get(listaEspacios.indexOf(ef)).getX() + 78), listaEspacios.get(listaEspacios.indexOf(ef)).getY());
                        map.put("Ficha", listaEspacios.get(listaEspacios.indexOf(e)));
                        PanelTablero.add(listaEspacios.get(listaEspacios.indexOf(e)));
                        PanelTablero.repaint();
                        listaEspacios.get(listaEspacios.indexOf(e)).repaint();
                    }

                }
            }

        }

    }

    public static void metodoPerron(EspacioFicha ef) {
//        int n=listaEspacios.size();
//        for (int i = 0; i < n; i++) {
        if (ef.isOcupada()) {
//                System.out.println(i);
            crearEspacio(ef);
        }
//        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel PanelTablero;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
